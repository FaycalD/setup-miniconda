name: "Example 13: Self-hosted"

on:
  pull_request:  # temporary, remove after pipeline is setup to save resources
    branches:
      - "main"  
      - "develop"
  push:
    branches:
      - "develop"
      - "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  example-1:
    # prevent cronjobs from running on forks
    if:
      (github.event_name == 'schedule' && github.repository ==
      'conda-incubator/setup-miniconda') || (github.event_name != 'schedule')
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ['cirun-openstack-cpu-small--${{ github.run_id }}', 'linux', 'x64', 'self-hosted']
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          miniforge-version: "latest"
          python-version: ${{ matrix.python-version }}
          activate-environment: foo
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda info
        shell: bash -el {0}
        run: conda list
